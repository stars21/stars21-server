<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stars21.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.stars21.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, age, password
  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from user where 1=1
    <if test="name != null">
       and name like '%' #{name} '%'
    </if>
  </select>
  <select id="selectUserIsExist"  parameterType="java.util.Map" resultType="java.lang.String">
    select name from user where name = #{name,jdbcType=VARCHAR}
    <if test="id != null">
    and id = #{id,jdbcType=INTEGER}
    </if>
    limit 1
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryUserList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where 1=1
    <if test="id != null">
      and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
      and name like '%' #{name} '%'
    </if>
    <if test="age != null">
      and  age = #{age,jdbcType=INTEGER}
    </if>
    order by id desc
    <if test="offset != null">
      <if test="rows != null">
          limit ${offset}, ${rows}
      </if>
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.stars21.model.User">
    insert into user (name, age,
      password)
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.stars21.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.stars21.model.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.stars21.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>